package nonverblaster {		import flash.display.*;	import flash.events.*;	import flash.utils.*;	import flash.external.*;	import flash.text.*;		public class External extends Sprite{				private var output		:TextField;		private var main		:MovieClip;		private var _stage		:Stage;				public function External($stage, $main){			main = $main;			//output = main.textFeld;			output = new TextField();			init();			_stage = $stage;			_stage.addEventListener(MouseEvent.CLICK, mouseHandler);		}		private function mouseHandler(e:MouseEvent){			if (ExternalInterface.available) {				ExternalInterface.call("nonverBlasterClickHandler");				_stage.removeEventListener(MouseEvent.CLICK, mouseHandler);			}		}		private function init(){			if (ExternalInterface.available) {                try {                    ExternalInterface.addCallback("sendToActionScript", receivedFromJavaScript);				} catch (error:SecurityError) {					output.appendText("A SecurityError occurred: " + error.message + "\n");				} catch (error:Error) {					output.appendText("An Error occurred: " + error.message + "\n");                }            } else {                output.appendText("External interface is not available for this container.");            }		}		private function receivedFromJavaScript(value:String){			output.appendText(value + "\n");			//ExternalInterface.call("alert", value);			doAction(value);		}		private function doAction(value){			switch(value.split(":")[0]){				case "play":				if(main.started == false || main.isComplete == true){					main.playMedia();				} else if(main.isPlaying == false){					main.resumeMedia();				}				break;				case "pause":				if(main.started == true){					main.pauseMedia();				}				break;								case "toggleSound":				main.toggleVolume();				break;								case "switchColor":				Glo.bal.controlColour = value.split(":")[1];				main.setTints();				break;								case "resetAll":				main.resetAll();				break;								case "switch":				main.switchVideo(value.split(":")[1]);				break;							}		}	}}